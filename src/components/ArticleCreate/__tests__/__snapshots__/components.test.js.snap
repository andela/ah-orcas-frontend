// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Update form update should render self and subcomponents 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BodyinputComponent
    body=""
    buttonDisabled={[Function]}
    description=""
    error=""
    handlechange={[Function]}
    loading={[Function]}
    login={[MockFunction]}
    resolved={false}
    social={Object {}}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    submitArticle={[Function]}
    success={[Function]}
    title=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="form-group-lg title-input"
        >
          <div
            className="Alert"
          >
            <Alert
              color="success"
              message="Successfully Created an Article!"
            />
          </div>
          
          <Connect(TagInput)
            TitleHint="Title"
            handlechange={[Function]}
            title=""
          />
        </div>,
        <div
          className="form-group-lg description-input"
        >
          <input
            className="form-control description"
            name="description"
            onChange={[Function]}
            placeholder="Description"
            style={
              Object {
                "border": "1px solid",
              }
            }
            value=""
          />
        </div>,
        <div
          className="form-control-lg body-input"
        >
          <textarea
            className="form-control description "
            name="body"
            onChange={[Function]}
            placeholder="Enter Article body here...."
            style={
              Object {
                "border": "1px solid",
              }
            }
            value=""
          />
          <button
            className="publish-btn btn btn-primary"
            disabled={[Function]}
            onClick={[Function]}
            style={
              Object {
                "background": "#2ebaae",
              }
            }
            type="submit"
          >
            <i
              className="fa fa-spinner fa-spin"
            />
          </button>
        </div>,
      ],
      "className": "article-create-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="Alert"
            >
              <Alert
                color="success"
                message="Successfully Created an Article!"
              />
            </div>,
            "",
            <Connect(TagInput)
              TitleHint="Title"
              handlechange={[Function]}
              title=""
            />,
          ],
          "className": "form-group-lg title-input",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Alert
                color="success"
                message="Successfully Created an Article!"
              />,
              "className": "Alert",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "success",
                "message": "Successfully Created an Article!",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          "",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "TitleHint": "Title",
              "handlechange": [Function],
              "title": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            className="form-control description"
            name="description"
            onChange={[Function]}
            placeholder="Description"
            style={
              Object {
                "border": "1px solid",
              }
            }
            value=""
          />,
          "className": "form-group-lg description-input",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "form-control description",
            "name": "description",
            "onChange": [Function],
            "placeholder": "Description",
            "style": Object {
              "border": "1px solid",
            },
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <textarea
              className="form-control description "
              name="body"
              onChange={[Function]}
              placeholder="Enter Article body here...."
              style={
                Object {
                  "border": "1px solid",
                }
              }
              value=""
            />,
            <button
              className="publish-btn btn btn-primary"
              disabled={[Function]}
              onClick={[Function]}
              style={
                Object {
                  "background": "#2ebaae",
                }
              }
              type="submit"
            >
              <i
                className="fa fa-spinner fa-spin"
              />
            </button>,
          ],
          "className": "form-control-lg body-input",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control description ",
              "name": "body",
              "onChange": [Function],
              "placeholder": "Enter Article body here....",
              "style": Object {
                "border": "1px solid",
              },
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="fa fa-spinner fa-spin"
              />,
              "className": "publish-btn btn btn-primary",
              "disabled": [Function],
              "onClick": [Function],
              "style": Object {
                "background": "#2ebaae",
              },
              "type": "submit",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-spinner fa-spin",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form-group-lg title-input"
          >
            <div
              className="Alert"
            >
              <Alert
                color="success"
                message="Successfully Created an Article!"
              />
            </div>
            
            <Connect(TagInput)
              TitleHint="Title"
              handlechange={[Function]}
              title=""
            />
          </div>,
          <div
            className="form-group-lg description-input"
          >
            <input
              className="form-control description"
              name="description"
              onChange={[Function]}
              placeholder="Description"
              style={
                Object {
                  "border": "1px solid",
                }
              }
              value=""
            />
          </div>,
          <div
            className="form-control-lg body-input"
          >
            <textarea
              className="form-control description "
              name="body"
              onChange={[Function]}
              placeholder="Enter Article body here...."
              style={
                Object {
                  "border": "1px solid",
                }
              }
              value=""
            />
            <button
              className="publish-btn btn btn-primary"
              disabled={[Function]}
              onClick={[Function]}
              style={
                Object {
                  "background": "#2ebaae",
                }
              }
              type="submit"
            >
              <i
                className="fa fa-spinner fa-spin"
              />
            </button>
          </div>,
        ],
        "className": "article-create-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="Alert"
              >
                <Alert
                  color="success"
                  message="Successfully Created an Article!"
                />
              </div>,
              "",
              <Connect(TagInput)
                TitleHint="Title"
                handlechange={[Function]}
                title=""
              />,
            ],
            "className": "form-group-lg title-input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Alert
                  color="success"
                  message="Successfully Created an Article!"
                />,
                "className": "Alert",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "color": "success",
                  "message": "Successfully Created an Article!",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            "",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "TitleHint": "Title",
                "handlechange": [Function],
                "title": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="form-control description"
              name="description"
              onChange={[Function]}
              placeholder="Description"
              style={
                Object {
                  "border": "1px solid",
                }
              }
              value=""
            />,
            "className": "form-group-lg description-input",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control description",
              "name": "description",
              "onChange": [Function],
              "placeholder": "Description",
              "style": Object {
                "border": "1px solid",
              },
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <textarea
                className="form-control description "
                name="body"
                onChange={[Function]}
                placeholder="Enter Article body here...."
                style={
                  Object {
                    "border": "1px solid",
                  }
                }
                value=""
              />,
              <button
                className="publish-btn btn btn-primary"
                disabled={[Function]}
                onClick={[Function]}
                style={
                  Object {
                    "background": "#2ebaae",
                  }
                }
                type="submit"
              >
                <i
                  className="fa fa-spinner fa-spin"
                />
              </button>,
            ],
            "className": "form-control-lg body-input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control description ",
                "name": "body",
                "onChange": [Function],
                "placeholder": "Enter Article body here....",
                "style": Object {
                  "border": "1px solid",
                },
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="fa fa-spinner fa-spin"
                />,
                "className": "publish-btn btn btn-primary",
                "disabled": [Function],
                "onClick": [Function],
                "style": Object {
                  "background": "#2ebaae",
                },
                "type": "submit",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fa fa-spinner fa-spin",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
